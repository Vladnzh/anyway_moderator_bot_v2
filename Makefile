.PHONY: help install run-bot run-admin run-admin-bg run-both clean test logs open-admin open-legacy api-test stop status set-token

VENV = .venv
PYTHON = $(VENV)/bin/python
PIP = $(VENV)/bin/pip

help:
	@echo "ü§ñ Anyway Moderator Bot v2 - –ö–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@echo "‚ö° –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:"
	@echo "  make setup       - –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ (venv + –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ + .env)"
	@echo ""
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞:"
	@echo "  make install     - –°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo ""
	@echo "üöÄ –ó–∞–ø—É—Å–∫:"
	@echo "  make run-bot     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
	@echo "  make run-admin   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∫—É (—Å –∞–≤—Ç–æ-–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π)"
	@echo "  make run-admin-bg- –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∫—É –≤ —Ñ–æ–Ω–µ"
	@echo "  make run-both    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –∞–¥–º–∏–Ω–∫—É –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ"
	@echo ""
	@echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
	@echo "  make open-admin  - –û—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—É—é –∞–¥–º–∏–Ω–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
	@echo "  make open-legacy - –û—Ç–∫—Ä—ã—Ç—å legacy –∞–¥–º–∏–Ω–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
	@echo "  make api-test    - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API"
	@echo ""
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞:"
	@echo "  make clean       - –û—á–∏—Å—Ç–∏—Ç—å Python –∫—ç—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo ""
	@echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
	@echo "  make test        - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
	@echo "  make logs        - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏"
	@echo "  make status      - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo ""
	@echo "üõë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
	@echo "  make stop        - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"
	@echo "  make set-token   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
	@echo ""

install: setup

setup:
	@echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	python3 -m venv $(VENV)
	$(PIP) install -U pip
	$(PIP) install -r requirements.txt
	@echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!"
	@echo ""
	@echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞..."
	python3 start.py

run-bot:
	@echo "ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
	$(PYTHON) bot.py

run-admin:
	@echo "üéõÔ∏è –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω–∫–∏ —Å API..."
	@if [ -z "$$ADMIN_TOKEN" ]; then \
		if [ -f .env ] && grep -q "ADMIN_TOKEN=" .env; then \
			echo "üìÑ –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–∫–µ–Ω –∏–∑ .env —Ñ–∞–π–ª–∞..."; \
			export $$(grep ADMIN_TOKEN .env | xargs) && $(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0; \
		else \
			echo "üîê –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"; \
			read -s token; \
			if [ -n "$$token" ]; then \
				echo "‚úÖ –¢–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; \
				ADMIN_TOKEN=$$token $(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0; \
			else \
				echo "‚ö†Ô∏è  –¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 'changeme'"; \
				ADMIN_TOKEN=changeme $(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0; \
			fi; \
		fi; \
	else \
		$(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0; \
	fi

run-admin-bg:
	@echo "üéõÔ∏è –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω–∫–∏ –≤ —Ñ–æ–Ω–µ..."
	@if [ -z "$$ADMIN_TOKEN" ]; then \
		echo "‚ö†Ô∏è  ADMIN_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 'changeme'"; \
		ADMIN_TOKEN=changeme $(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0 & \
	else \
		$(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0 & \
	fi

clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
	find . -type d -name "__pycache__" -exec rm -rf {} +
	find . -type f -name "*.pyc" -delete
	find . -type f -name "*.pyo" -delete
	@echo "‚úÖ –û—á–∏—â–µ–Ω–æ!"

clean-db:
	@echo "üóÑÔ∏è –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@rm -f bot_data.db
	@python3 -c "from database import db; print('‚úÖ –ß–∏—Å—Ç–∞—è SQLite –±–∞–∑–∞ —Å–æ–∑–¥–∞–Ω–∞')"
	@echo "üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞! –ú–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–µ–≥–∏ —Å –Ω—É–ª—è."

test:
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@$(PYTHON) -c "from database import db; stats = db.get_stats(); print(f'üìä –¢–µ–≥–æ–≤ –≤ –±–∞–∑–µ: {stats[\"total_tags\"]}'); tags = db.get_tags(); [print(f'üè∑Ô∏è  {tag[\"tag\"]} -> {tag[\"emoji\"]} (ID: {tag[\"id\"]})') for tag in tags]; print('‚úÖ SQLite –±–∞–∑–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')"

logs:
	@echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –∏–∑ SQLite –±–∞–∑—ã:"
	@$(PYTHON) -c "from database import db; logs = db.get_logs(limit=5); [print(f'{l[\"timestamp\"]} [{l[\"username\"]}] {l[\"trigger\"]} -> {l[\"emoji\"]}') for l in logs] if logs else print('üìù –õ–æ–≥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç')" 2>/dev/null || echo "‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤ –∏–∑ SQLite"

run-both:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –∞–¥–º–∏–Ω–∫–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ..."
	@echo "ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ..."
	@$(PYTHON) bot.py &
	@echo "üéõÔ∏è –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω–∫–∏..."
	@if [ -z "$$ADMIN_TOKEN" ]; then \
		if [ -f .env ] && grep -q "ADMIN_TOKEN=" .env; then \
			echo "üìÑ –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–∫–µ–Ω –∏–∑ .env —Ñ–∞–π–ª–∞..."; \
			export $$(grep ADMIN_TOKEN .env | xargs) && $(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0; \
		else \
			echo "üîê –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"; \
			read -s token; \
			if [ -n "$$token" ]; then \
				echo "‚úÖ –¢–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; \
				ADMIN_TOKEN=$$token $(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0; \
			else \
				echo "‚ö†Ô∏è  –¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 'changeme'"; \
				ADMIN_TOKEN=changeme $(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0; \
			fi; \
		fi; \
	else \
		$(VENV)/bin/uvicorn admin:app --reload --port 8000 --host 0.0.0.0; \
	fi

open-admin:
	@echo "üåê –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–π –∞–¥–º–∏–Ω–∫–∏..."
	@open http://localhost:8000/ 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ http://localhost:8000/"

open-legacy:
	@echo "üåê –û—Ç–∫—Ä—ã—Ç–∏–µ legacy –∞–¥–º–∏–Ω–∫–∏..."
	@open "http://localhost:8000/legacy?token=$${ADMIN_TOKEN:-changeme}" 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ http://localhost:8000/legacy?token=$${ADMIN_TOKEN:-changeme}"

api-test:
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
	@echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
	@curl -s -H "Authorization: Bearer $${ADMIN_TOKEN:-changeme}" http://localhost:8000/api/config | $(PYTHON) -m json.tool 2>/dev/null || echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–¥–º–∏–Ω–∫—É: make run-admin"
	@echo ""
	@echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏..."
	@curl -s -H "Authorization: Bearer $${ADMIN_TOKEN:-changeme}" http://localhost:8000/api/stats | $(PYTHON) -m json.tool 2>/dev/null || echo "‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

stop:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
	@echo "üîç –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞..."
	@pids=$$(ps aux | grep -E "(bot\.py|python.*bot)" | grep -v grep | awk '{print $$2}' || true); \
	if [ -n "$$pids" ]; then \
		echo "ü§ñ –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞: $$pids"; \
		kill $$pids 2>/dev/null || true; \
		sleep 2; \
		remaining=$$(ps aux | grep -E "(bot\.py|python.*bot)" | grep -v grep | awk '{print $$2}' || true); \
		if [ -n "$$remaining" ]; then \
			echo "‚ö†Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞: $$remaining"; \
			kill -9 $$remaining 2>/dev/null || true; \
		fi; \
		echo "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; \
	else \
		echo "ü§ñ –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"; \
	fi
	@echo "üîç –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∞–¥–º–∏–Ω–∫–∏..."
	@pkill -f "uvicorn.*admin:app" 2>/dev/null && echo "‚úÖ –ê–¥–º–∏–Ω–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞" || echo "üéõÔ∏è –ê–¥–º–∏–Ω–∫–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

status:
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	@printf "ü§ñ –ë–æ—Ç: "
	@ps aux | grep -E "(bot\.py|python.*bot)" | grep -v grep >/dev/null && echo "‚úÖ –ó–∞–ø—É—â–µ–Ω" || echo "‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
	@printf "üéõÔ∏è –ê–¥–º–∏–Ω–∫–∞: "
	@pgrep -f "uvicorn.*admin:app" >/dev/null && echo "‚úÖ –ó–∞–ø—É—â–µ–Ω–∞ (http://localhost:8000/)" || echo "‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"

set-token:
	@echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
	@echo ""
	@if [ -f .env ]; then \
		echo "üìÑ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª"; \
		if grep -q "ADMIN_TOKEN=" .env; then \
			current_token=$$(grep ADMIN_TOKEN .env | cut -d'=' -f2); \
			echo "üîë –¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω: $$current_token"; \
		else \
			echo "‚ö†Ô∏è  ADMIN_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env"; \
		fi; \
		echo ""; \
	else \
		echo "üìù –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω"; \
		echo ""; \
	fi; \
	echo "üîê –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏–ª–∏ Enter –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏):"; \
	read token; \
	if [ -z "$$token" ]; then \
		echo "üé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ç–æ–∫–µ–Ω..."; \
		token=$$($(PYTHON) -c "import secrets; print(secrets.token_urlsafe(32))"); \
		echo "‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Ç–æ–∫–µ–Ω: $$token"; \
	fi; \
	if [ -f .env ]; then \
		if grep -q "ADMIN_TOKEN=" .env; then \
			sed -i.bak "s/ADMIN_TOKEN=.*/ADMIN_TOKEN=$$token/" .env && rm .env.bak; \
			echo "‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"; \
		else \
			echo "ADMIN_TOKEN=$$token" >> .env; \
			echo "‚úÖ –¢–æ–∫–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª"; \
		fi; \
	else \
		echo "# –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)" > .env; \
		echo "BOT_TOKEN=your_bot_token_here" >> .env; \
		echo "" >> .env; \
		echo "# –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" >> .env; \
		echo "ADMIN_TOKEN=$$token" >> .env; \
		echo "" >> .env; \
		echo "# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" >> .env; \
		echo "CONFIG_PATH=config_json" >> .env; \
		echo "LOGS_PATH=logs.json" >> .env; \
		echo "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª —Å —Ç–æ–∫–µ–Ω–æ–º"; \
	fi; \
	echo ""; \
	echo "üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∫—É: make run-admin"

# ===== DOCKER –ö–û–ú–ê–ù–î–´ =====

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
docker-build:
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
	docker-compose -p moderator-bot build

# Development –∑–∞–ø—É—Å–∫ (–±–µ–∑ Nginx)
docker-dev:
	@echo "üîß –ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ..."
	docker-compose -p moderator-bot up -d bot admin

# Production –∑–∞–ø—É—Å–∫ (—Å Nginx)
docker-prod:
	@echo "üåê –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ..."
	docker-compose -p moderator-bot --profile production up -d

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
docker-stop:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -p moderator-bot down

# –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
docker-logs:
	@echo "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -p moderator-bot logs -f

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
docker-status:
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -p moderator-bot ps

# –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
deploy-dev:
	@echo "üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (development)..."
	./deploy.sh staging

deploy-prod:
	@echo "üåê –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (production)..."
	./deploy.sh production