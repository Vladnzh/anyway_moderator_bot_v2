#!/bin/bash
set -e

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Hetzner
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [production|staging]

ENVIRONMENT=${1:-production}
PROJECT_NAME="moderator-bot"
COMPOSE_FILE="docker-compose.yml"

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ $PROJECT_NAME –≤ —Ä–µ–∂–∏–º–µ $ENVIRONMENT"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏:"
    echo "BOT_TOKEN=your_bot_token"
    echo "ADMIN_TOKEN=your_admin_token"
    exit 1
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
source .env

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [ -z "$BOT_TOKEN" ] || [ -z "$ADMIN_TOKEN" ]; then
    echo "‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ BOT_TOKEN –∏ ADMIN_TOKEN –≤ .env"
    exit 1
fi

echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -p $PROJECT_NAME down --remove-orphans || true

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker-compose -p $PROJECT_NAME build --no-cache

# –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ -f "config_json" ] || [ -f "logs.json" ]; then
    echo "üì¶ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã JSON —Ñ–∞–π–ª—ã, –≤—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
    docker run --rm \
        -v $(pwd):/app \
        -v ${PROJECT_NAME}_bot_data:/app/data \
        --workdir /app \
        ${PROJECT_NAME}_admin:latest \
        python migrate_to_sqlite.py
    
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
if [ "$ENVIRONMENT" = "production" ]; then
    echo "üåê –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ —Å Nginx..."
    docker-compose -p $PROJECT_NAME --profile production up -d
else
    echo "üîß –ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ..."
    docker-compose -p $PROJECT_NAME up -d bot admin
fi

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -p $PROJECT_NAME ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –∞–¥–º–∏–Ω–∫–∏
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∞–¥–º–∏–Ω–∫–∏..."
if curl -f http://localhost:8000/health > /dev/null 2>&1; then
    echo "‚úÖ –ê–¥–º–∏–Ω–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: http://localhost:8000"
else
    echo "‚ö†Ô∏è –ê–¥–º–∏–Ω–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "docker-compose -p $PROJECT_NAME logs admin"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –õ–æ–≥–∏:           docker-compose -p $PROJECT_NAME logs -f"
echo "  –°—Ç–∞—Ç—É—Å:         docker-compose -p $PROJECT_NAME ps"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:      docker-compose -p $PROJECT_NAME down"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:     docker-compose -p $PROJECT_NAME restart"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø:"
echo "  –ê–¥–º–∏–Ω–∫–∞:        http://localhost:8000"
if [ "$ENVIRONMENT" = "production" ]; then
    echo "  Nginx:          http://localhost (HTTP -> HTTPS redirect)"
    echo "  Nginx HTTPS:    https://localhost (—Ç—Ä–µ–±—É–µ—Ç—Å—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç)"
fi
echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL (–¥–ª—è production):"
echo "  1. –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ –ø–∞–ø–∫—É ./ssl/"
echo "  2. cert.pem - —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
echo "  3. key.pem - –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á"
echo ""
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "  docker stats"
echo "  docker-compose -p $PROJECT_NAME top"
