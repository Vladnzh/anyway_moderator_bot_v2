version: '3.8'

services:
  # Telegram бот
  bot:
    build: .
    container_name: moderator-bot
    restart: unless-stopped
    command: python bot.py
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - DATABASE_PATH=/app/data/bot_data.db
    volumes:
      - ./data:/app/data
      - ./json_backup:/app/json_backup:ro
    depends_on:
      - admin
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "python", "-c", "import sqlite3; sqlite3.connect('/app/data/bot_data.db').execute('SELECT 1')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Веб админка
  admin:
    build: .
    container_name: moderator-admin
    restart: unless-stopped
    command: python admin.py
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - DATABASE_PATH=/app/data/bot_data.db
    volumes:
      - ./data:/app/data
      - ./static:/app/static:ro
    ports:
      - "8000:8000"
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/static/admin.html"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx для проксирования (опционально)
  nginx:
    image: nginx:alpine
    container_name: moderator-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - admin
    networks:
      - bot_network
    profiles:
      - production

networks:
  bot_network:
    driver: bridge
